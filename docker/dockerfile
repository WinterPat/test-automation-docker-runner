ARG ALPINE_VERSION=3.19.0
ARG NODE_VERSION=18.16.0

FROM alpine:${ALPINE_VERSION} AS build_nginx

ARG CMAKE_VERSION="3.26.4"
ARG NGINX_VERSION="1.24.0"
ARG NGINX_RTMP_MODULE_VERSION="1.2.2"

WORKDIR /tmp

RUN build_pkgs="build-base linux-headers openssl-dev pcre-dev wget zlib-dev patch" && \
    apk --update --no-cache upgrade && apk --no-cache add ${build_pkgs}

# Lataa Nginx.
RUN mkdir -p /tmp/build && \
    cd /tmp/build && \
	wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
	tar -zxf nginx-${NGINX_VERSION}.tar.gz

# Lataa nginx-rtmp-module.
RUN cd /tmp/build && \
    wget https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_MODULE_VERSION}.tar.gz && \
    tar -zxf v${NGINX_RTMP_MODULE_VERSION}.tar.gz

# Asenna Nginx ja nginx-rtmp-module.
RUN cd /tmp/build/nginx-${NGINX_VERSION} && \
    ./configure \
      --prefix=/etc/nginx \
      --sbin-path=/usr/sbin/nginx \
      --conf-path=/etc/nginx/nginx.conf \
      --error-log-path=/var/log/nginx/error.log \
      --http-log-path=/var/log/nginx/access.log \
      --pid-path=/var/run/nginx.pid \
      --lock-path=/var/lock/nginx.lock \
      --http-client-body-temp-path=/tmp/nginx-client-body \
      --with-http_ssl_module \
      --with-threads \
      --add-module=../nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION} && \
    make && \
    make install && \
    rm -rf /tmp/* && \
    apk del ${build_pkgs} && \
    rm -rf /var/cache/apk/*

# Haen node docker kuva.
FROM node:${NODE_VERSION}-alpine AS build_node

# Lopullinen pohjakuva.
FROM alpine:latest

# Luo ympäristömuuttujat.
ENV DEBIAN_FRONTEND noninteractive
ENV HLS_SEG_DIR /mnt/hls
ENV DASH_SEG_DIR /mnt/dash
ENV REC_DIR /tmp/recording
ENV ROBOT_WORK_DIR /opt/robotframework
ENV ROBOT_DOCKER_DIR /opt/robotframework/docker
ENV ROBOT_REPORTS_DIR /opt/robotframework/reports
ENV RUNNER_DIR /actions-runner

# Kopioi node.
COPY --from=build_node /usr/lib /usr/lib
COPY --from=build_node /usr/local/lib /usr/local/lib
COPY --from=build_node /usr/local/include /usr/local/include
COPY --from=build_node /usr/local/bin /usr/local/bin

# Kopioi nginx.
COPY --from=build_nginx /usr/sbin/nginx /usr/sbin/nginx
COPY --from=build_nginx /etc/nginx /etc/nginx
COPY docker/nginx.conf /etc/nginx/nginx.conf

## Lataa ja asenna github-runner.
#RUN mkdir -p ${RUNNER_DIR} && cd ${RUNNER_DIR} \
#    && curl -o actions-runner-linux-x64-2.311.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.311.0/actions-runner-linux-x64-2.311.0.tar.gz \
#    && tar xzf ./actions-runner-linux-x64-2.311.0.tar.gz

RUN mkdir -p /var/run/dbus

# Asenna xrdp ja xfce4 tarvitsemat paketit
RUN apk --update --no-cache upgrade && apk add --no-cache \
    xrdp xorg-server x11vnc xorgxrdp xfce4 xfce4-clipman-plugin \
    xfce4-cpugraph-plugin xfce4-screenshooter \
    xfce4-taskmanager xfce4-terminal \
    xfce4-xkb-plugin openssh  dbus util-linux \
    util-linux xauth xf86-input-synaptics tango-icon-theme \
    xf86-input-evdev udev supervisor

# Asenna muut apk paketit.
RUN apk --update --no-cache upgrade && apk --no-cache add \
    bash bash-completion ca-certificates curl chromium gcc g++ \
    ffmpeg git xvfb  \
    python3 python3-dev py3-pip \
    tzdata sudo nano

#RUN python3 -m venv 

# Asenna python paketit.
#RUN python3 -m pip install --no-cache-dir \
#    wheel \
#    robotframework==6.0.2 \
#    robotframework-browser

# Alusta Robot Framnework Browser kirjasto
#RUN rfbrowser init

# Kopioi html verkkosoitin.
COPY docker/player /usr/local/nginx/html/player

# Kopioi skriptit.
COPY docker/run_suite.sh /opt/robotframework/docker/run_suite.sh
COPY docker/start_runner.sh /actions-runner/start_runner.sh
COPY docker/xrdp/ubuntu-run.sh /actions-runner/ubuntu-run.sh
COPY docker/xrdp/alpine-run.sh /actions-runner/alpine-run.sh

# kopioi xrdp initialisointi tiedostot.
COPY docker/xrdp/etc/xrdp.ini /etc/xrdp/xrdp.ini
COPY docker/xrdp/etc/sesman.ini /etc/xrdp/sesman.ini
COPY docker/xrdp/supervisord.conf /etc/xrdp/supervisord.conf 
     
RUN touch /etc/skel/.Xauthority 

# Alusta xfce4 ja xrdp.
RUN touch /etc/X11/Xwrapper.config && \
    echo -e "# Xorg.wrap configuation file\nallowed_users=anybody\nneeds_root_rights=no" >> /etc/X11/Xwrapper.config && \
    #sed -i "s/console/anybody/g" /etc/X11/Xwrapper.config && \
    sed -i '/TerminalServerUsers/d' /etc/xrdp/sesman.ini && \
    sed -i '/TerminalServerAdmins/d' /etc/xrdp/sesman.ini

    #cp /etc/X11/xrdp/xorg.conf /etc/X11 && \    #sed -i "s/xrdp\/xorg/xorg/g" /etc/xrdp/xrdp.ini && 
    #sed -i "s/xrdp\/xorg/xorg/g" /etc/xrdp/sesman.ini && \
    #echo "xfce4-session" >> /etc/skel/.Xsession

# Luo tarvittavat kansiot. 
RUN mkdir -p ${ROBOT_REPORTS_DIR} \
    && mkdir -p ${ROBOT_WORK_DIR} \
    && mkdir -p ${HLS_SEG_DIR} \
    && mkdir -p ${DASH_SEG_DIR} \
    && mkdir -p ${REC_DIR} 

# Anna käyttöoikeuksia.
RUN chmod 777 -R ${ROBOT_WORK_DIR} \
    && chmod 777 -R ${ROBOT_REPORTS_DIR} \
    && chmod 777 -R ${HLS_SEG_DIR} \
    && chmod 777 -R ${DASH_SEG_DIR} \
    && chmod 777 -R ${REC_DIR} \
    && chmod 777 -R ${RUNNER_DIR} \
    && chmod 777 /opt/robotframework/docker/run_suite.sh \
    && chmod +x /actions-runner/start_runner.sh \
    && chmod a+x /actions-runner/alpine-run.sh


# Aseta aikavyöhyke ja luo .Xauthority tiedosto.
RUN export TZ=Europe/Helsinki \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone

# Siivous.
RUN rm -rf /tmp/* /var/cache/apk/* 

# Avaa portit.
EXPOSE 22 80 443 3389

# Ota käyttöön työkirjasto.
WORKDIR /actions-runner

#RUN ./config.sh --url https://github.com/WinterPat/test-automation-docker-runner --token AKXSQPZ4YOTZUXV5EPESW5LFOCLFO
# Asenna nvm, node ja npm.
#RUN curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash \
#    nvm install node \
#    curl -qL https://www.npmjs.com/install.sh | sh

ENTRYPOINT ["./alpine-run.sh"]