FROM ubuntu:latest

ARG CMAKE_VERSION="3.26.4"
ARG FFMPEG_VERSION="4.2.2"
ARG NGINX_VERSION="1.24.0"
ARG NGINX_RTMP_MODULE_VERSION="1.2.2"
ARG CHROME_VERSION="120.0.6099.109-1"
ARG CHROMEDRIVER_VERSION="120.0.6099.71"


# Luo ympäristömuuttujat.
ENV DEBIAN_FRONTEND noninteractive
ENV HLS_SEG_DIR /mnt/hls
ENV DASH_SEG_DIR /mnt/dash
ENV REC_DIR /tmp/recording
ENV ROBOT_WORK_DIR /opt/robotframework
ENV ROBOT_DOCKER_DIR /opt/robotframework/docker
ENV ROBOT_REPORTS_DIR /opt/robotframework/reports
ENV RUNNER_DIR /actions-runner

# Asenna apt paketit.
RUN apt-get update && apt-get install -yq --no-install-recommends \
    build-essential ca-certificates apt-utils apt-transport-https \
    libssl-dev libpcre3-dev librtmp-dev libtheora-dev libvorbis-dev libvpx-dev libxcb-util-dev \
    libfreetype6-dev libmp3lame-dev librtmp1 libx264-dev libx265-dev \
    libtheora0 libmp3lame0 libncurses5 libxml2-dev \
    libxslt-dev libnss3 libatk-bridge2.0-0 libgbm-dev \
    libz-dev libgtk-3-0 libgconf-2-4 \
    python3-tk python3-dev python3-pip \
    iputils-ping git jq lsb-release python3-pip \
    ffmpeg software-properties-common \
    psmisc xsel unzip tzdata \
    xclip xvfb matchbox xauth \
    wget curl yasm pkg-config dos2unix \
    scrot

# Lataa Nginx.
RUN mkdir -p /tmp/build && \
    cd /tmp/build && \
	wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
	tar -zxf nginx-${NGINX_VERSION}.tar.gz && \
	rm nginx-${NGINX_VERSION}.tar.gz

# Lataa nginx-rtmp-module.
RUN cd /tmp/build && \
    wget https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_MODULE_VERSION}.tar.gz && \
    tar -zxf v${NGINX_RTMP_MODULE_VERSION}.tar.gz && \
	rm v${NGINX_RTMP_MODULE_VERSION}.tar.gz

# Asenna Nginx, jossa on mukana nginx-rtmp-module.
RUN cd /tmp/build/nginx-${NGINX_VERSION} && \
    ./configure \
    --sbin-path=/usr/local/sbin/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --error-log-path=/var/log/nginx/error.log \
    --http-log-path=/var/log/nginx/access.log \		
    --pid-path=/var/run/nginx/nginx.pid \
    --lock-path=/var/lock/nginx.lock \
    --http-client-body-temp-path=/tmp/nginx-client-body \
    --with-http_ssl_module \
    --with-threads \
    --add-module=/tmp/build/nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION} && \
    make -j $(getconf _NPROCESSORS_ONLN) && \
    make install

# Kopio stat.xsl-tiedosto nginx html kanstioon ja siivoa build-kansio.
RUN cp /tmp/build/nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}/stat.xsl /usr/local/nginx/html/stat.xsl && \
	rm -rf /tmp/build

# Lataa ja asenna Chrome.
RUN wget --no-verbose -O /tmp/chrome.deb https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION}_amd64.deb \
    && apt-get update --fix-missing \
    && apt install -y /tmp/chrome.deb \
    && rm /tmp/chrome.deb

# Lataa ja asenna ChromeDriver. Käyttää Chromen versiota sopivan ChromeDriver version asentamiseen.
RUN curl -sS -o /tmp/chromedriver-linux64.zip https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip \
    && unzip -qq /tmp/chromedriver-linux64.zip -d /opt/chromedriver-${CHROMEDRIVER_VERSION} \
    && rm /tmp/chromedriver-linux64.zip \
    && chmod +x -R /opt/chromedriver-${CHROMEDRIVER_VERSION} \
    && ln -fs /opt/chromedriver-${CHROMEDRIVER_VERSION}/chromedriver /usr/local/bin/chromedriver

# Lataa ja pura runner.
RUN mkdir -p ${RUNNER_DIR} && cd ${RUNNER_DIR} \
    && curl -o actions-runner-linux-x64-2.311.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.311.0/actions-runner-linux-x64-2.311.0.tar.gz \
    && tar xzf ./actions-runner-linux-x64-2.311.0.tar.gz

# Asenna python paketit.
RUN pip3 install --no-cache-dir \
    robotframework==6.0.2 \
    robotframework-browser

# Xfce työpöydän asennus.
RUN apt-get install -y \
    xfce4 \
    xfce4-clipman-plugin \
    xfce4-cpugraph-plugin \
    xfce4-netload-plugin \
    xfce4-screenshooter \
    xfce4-taskmanager \
    xfce4-terminal \
    xfce4-xkb-plugin 

# Asenna xrdp
RUN apt-get install -y \
    sudo \
    xorgxrdp \
    xrdp-dev && \
    apt remove -y light-locker xscreensaver && \
    apt autoremove -y     

# https://github.com/danielguerra69/ubuntu-xrdp/blob/master/Dockerfile
RUN mkdir /var/run/dbus && \
    cp /etc/X11/xrdp/xorg.conf /etc/X11 && \
    sed -i "s/console/anybody/g" /etc/X11/Xwrapper.config && \
    sed -i "s/xrdp\/xorg/xorg/g" /etc/xrdp/sesman.ini && \
    echo "xfce4-session" >> /etc/skel/.Xsession

# Aseta aikavyöhyke ja luo .Xauthority tiedosto.
RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && touch ~/.Xauthority \
    && export TZ=Europe/Helsinki \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone

# Kopioi nginx konfiguraatiotiedosto.
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Kopio robot käynnistys skripti.
COPY docker/run_suite.sh /opt/robotframework/docker/run_suite.sh

# Kopioi html verkkosoitin.
COPY docker/player /usr/local/nginx/html/player

# Kopio agentin asennus/käynnistys skripti.
COPY docker/start_runner.sh /actions-runner/start_runner.sh

# Xrdp skripti.
COPY docker/xrdp/ubuntu-run.sh /actions-runner/ubuntu-run.sh

RUN chmod +x /actions-runner/ubuntu-run.sh

# Luo raportti ja työkansiot. Anna käyttöoikeuksia.
RUN mkdir -p ${ROBOT_REPORTS_DIR} \
    && mkdir -p ${ROBOT_WORK_DIR} \
    && mkdir -p ${HLS_SEG_DIR} \
    && mkdir -p ${DASH_SEG_DIR} \
    && mkdir -p ${REC_DIR} \
    && chmod 777 -R ${ROBOT_WORK_DIR} \
    && chmod 777 -R ${ROBOT_REPORTS_DIR} \
    && chmod 777 -R ${HLS_SEG_DIR} \
    && chmod 777 -R ${DASH_SEG_DIR} \
    && chmod 777 -R ${REC_DIR} \
    && chmod 777 -R ${RUNNER_DIR} \
    && chmod 777 -R /var/log/nginx \
    && chmod 777 -R /usr/local/nginx \
    && chmod 777 -R /var/run/nginx \
    && chmod 777 /opt/robotframework/docker/run_suite.sh \
    && chmod +x /actions-runner/start_runner.sh

# Avaa portit 80,443,3389.
EXPOSE 80
EXPOSE 443
EXPOSE 3389

#USER automationuser

# Asenna node ja npm
RUN apt-get update && apt-get install gpg -y \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && apt-get update && apt-get install -y nodejs

# Alusta Robot Framnework Browser kirjasto
RUN rfbrowser init

WORKDIR /actions-runner

#RUN ./config.sh --url https://github.com/WinterPat/test-automation-docker-runner --token AKXSQPZ4YOTZUXV5EPESW5LFOCLFO
# Asenna nvm, node ja npm.
#RUN curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash \
#    nvm install node \
#    curl -qL https://www.npmjs.com/install.sh | sh
# Agentin käynnistäminen.  docker run -p 1935:1935 -p 8080:80 -p 33389:3389 docker-runner:latest
ENTRYPOINT ["./ubuntu-run.sh"]